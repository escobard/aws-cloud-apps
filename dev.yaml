version: '3'
services:
  postgres:
    container_name: postgres_dev
    build:
      context: ./server/postgres
      dockerfile: docker/Dockerfile
    ports:
      - "5432:5432"
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
  api:
    container_name: api_dev
    working_dir: /usr/cloud-apps/graphql
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - WAIT_HOSTS=postgres:5432
    ports:
      - "4000:4000"
    build:
      context: ./server/graphql
      dockerfile: docker/Dockerfile.dev
    volumes:
      - ./server/graphql:/usr/cloud-apps/graphql
      - /usr/cloud-apps/graphql/node_modules
    command: |
      sh -c "/wait && npm run dev"
  ui:
    container_name: ui_dev
    working_dir: /usr/cloud-apps/ui
    environment:
      # TODO - using localhost instead of api as a host name because of a bug in docker-compose
      - NEXT_PUBLIC_GRAPHQL_API=http://localhost:4000/graphql
      - WAIT_HOSTS=api:4000
    ports:
      - "3000:3000"
    build:
      context: client/ui
      dockerfile: docker/Dockerfile.dev
    volumes:
      - ./client/ui:/usr/cloud-apps/ui
      - /usr/cloud-apps/ui/node_modules
    command: |
      sh -c "/wait && npm run dev"
  e2e:
    container_name: e2e_dev
    working_dir: /usr/cloud-apps/e2e
    environment:
      - WAIT_HOSTS=ui:3000
    build:
      context: client/playwright
      dockerfile: docker/Dockerfile.dev
    ports:
      - "3001:9323"
    volumes:
      - ./client/playwright/test-results:/usr/cloud-apps/e2e/test-results
      - /usr/cloud-apps/e2e/node_modules
    command: |
      sh -c "/wait && npx playwright test smoke"
